/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJDialog.java
 *
 * Created on 27-dic-2009, 11:04:09
 */
package Gui;

import java.awt.TextArea;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import storedprocedure.StoredProcedure;

/**
 *
 * @author VAN BASTEM
 */
public class Operaciones extends javax.swing.JDialog {

    /** Creates new form NewJDialog */
    private int cont = 0;
    private String table = "";
    private StringBuilder sb = new StringBuilder();

    public Operaciones(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    public void setTable(String table) {
        this.table = table;
        this.jTextField1.setText(table.toUpperCase());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        ckInsert = new javax.swing.JCheckBox();
        ckUpdate = new javax.swing.JCheckBox();
        ckBorrado = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        ckDelete = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNameprocedure = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ckInsert.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckInsert.setText("Insert");
        ckInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckInsertActionPerformed(evt);
            }
        });

        ckUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckUpdate.setText("Update");
        ckUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckUpdateActionPerformed(evt);
            }
        });

        ckBorrado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckBorrado.setText("Borrado Logico");
        ckBorrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBorradoActionPerformed(evt);
            }
        });

        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ckDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckDelete.setText("delete");
        ckDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckDelete)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ckUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckBorrado, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addGap(75, 75, 75))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckInsert)
                    .addComponent(ckUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckBorrado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Nombre del procedimiento");

        txtNameprocedure.setColumns(20);
        txtNameprocedure.setLineWrap(true);
        txtNameprocedure.setRows(5);
        jScrollPane2.setViewportView(txtNameprocedure);

        jTextField1.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckInsertActionPerformed

        if (this.ckInsert.isSelected()) {
            cont++;
        } else {
            cont--;
        }
    }//GEN-LAST:event_ckInsertActionPerformed

    private void ckUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckUpdateActionPerformed
        if (this.ckUpdate.isSelected()) {
            cont++;
        } else {
            cont--;
        }
    }//GEN-LAST:event_ckUpdateActionPerformed

    private void ckBorradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBorradoActionPerformed
        if (this.ckBorrado.isSelected()) {
            cont++;
        } else {
            cont--;
        }
    }//GEN-LAST:event_ckBorradoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

       // String d = ;
         sb.append(generaheader());
        if(cont==0){
            JOptionPane.showMessageDialog(this,"No hay Seleccionado ninguna Operacion ... !!!!");
            return ;}
        if (ckInsert.isSelected()) {
            if (1 < cont) 
                sb.append(Acceso.bd==0? "if xop=1 then\n".concat(StoredProcedure.insertTable(table)).concat("End if;\n\n"):"if @op=1 \nBegin\n".concat(StoredProcedure.insertTable(table)).concat("End\n\n"));
            else 
                sb.append(StoredProcedure.insertTable(table));
        }     //uso InsertTable
        if (ckUpdate.isSelected()) {
            if (1 < cont) 
                sb.append(Acceso.bd==0? "if xop=2 then\n".concat(StoredProcedure.updateTable(table)).concat("End if;\n\n"):"if @op=2 \nBegin\n".concat(StoredProcedure.updateTable(table)).concat("End\n\n"));
             else 
                sb.append(StoredProcedure.updateTable(table));
        }
        if(ckDelete.isSelected() ){
            if(1<cont)
              sb.append(Acceso.bd==0? "if xop=4 then\n".concat(StoredProcedure.deleteTable(table)).concat("End if;\n\n"):"if @op=4 \nBegin\n".concat(StoredProcedure.deleteTable(table)).concat("End\n\n"));
            else
                sb.append(StoredProcedure.deleteTable(table));

        }
         if(ckBorrado.isSelected() ){
             String deleteLogic=StoredProcedure.deletLogicTable(table);
            if(1<cont){
                 if(!deleteLogic.contains("/*"))
                    sb.append(Acceso.bd==0? "if xop=3 then\n".concat(deleteLogic).concat("End if;\n\n"):"if @op=3 \nBegin\n".concat(deleteLogic).concat("End\n\n"));
                 else  sb.append(deleteLogic);
            } else
                sb.append(deleteLogic);

        }
        if(Acceso.bd==0)
             sb.append("End;");
        
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ckDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckDeleteActionPerformed
        if (this.ckDelete.isSelected()) {
            cont++;
        } else {
            cont--;
        }

        // TODO add your handling code here:
}//GEN-LAST:event_ckDeleteActionPerformed

    public String generaheader() {

        StringBuilder sb1 = new StringBuilder();
       // String nameprocedure = this.jTextField1.getText().trim();
        String nameprocedure =txtNameprocedure.getText().length() == 0 ? this.jTextField1.getText().trim() : txtNameprocedure.getText().trim();
        sb1.append(Acceso.bd == 0 ? "\ncreate procedure sp_" + nameprocedure + "(" : "create procedure sp_" + nameprocedure);
        sb1.append(1 < cont ? "\n\t"+Acceso.simbol+"op int ," : "");
        sb1.append(StoredProcedure.readParam(table));
        sb1.append(Acceso.bd == 0 ? "\n)\nBegin\n" : "\nas\n");

        /*
         esta parte se coloca como cabecera desde el EDitor de MySQL  ..> delimiter//
          */
        return new String(sb1);
    }

    public String getScript() {
        return new String(sb);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckBorrado;
    private javax.swing.JCheckBox ckDelete;
    private javax.swing.JCheckBox ckInsert;
    private javax.swing.JCheckBox ckUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea txtNameprocedure;
    // End of variables declaration//GEN-END:variables
}
