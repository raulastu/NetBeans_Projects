package vstudionetutil;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;

/**
 * XDXD
 * @author rC
 */
public class GenSEL_Procedures extends RCGen {

//    static String path = "E:/TF v2/SCRIPTS/";
    String spString = "";
    String schema;
    String spVarPrefix = "p_";
    String spPrefix = "stp_sel_";
    static HashMap<String, String[]> autogeneratedCode = new HashMap<String, String[]>();

    /**
     * 
     * @param con Database Connection
     * @param tables Array of tables that the procedure will be make for 
     * @param path pathfile
     * @param file filename 
     * @param prefijo prefix of the tables
     */
    public GenSEL_Procedures(Connection con, String dbName,
            String[] tables, String schema, String path, String file, String tablePrefix) {
        super(con, dbName, tables, tablePrefix, path, file);
        this.schema = schema;
    }

    public String makeSelProcedures(boolean drop) throws SQLException, IOException {
        PrintWriter pw = new PrintWriter(new FileWriter(filePath + fileName));
        System.out.println(":: Ready To write in " + filePath + fileName);
        String res = "";
        spString += "";
        if (drop) {
            for (String table : tables) {
                spString += "drop proc " + schema + "GETLIST_" + table + "\n";
                spString += "GO\n";
            }
        }
        if (!schema.contains("")) {
            spString += "DROP SCHEMA " + schema + "\n" +
                    "GO\n\n" +
                    "--CREANDO OBJETOS\n";
            spString += "CREATE SCHEMA " + schema + "\n" +
                    "GO\n";
        }
        res += spString;
        pw.println("USE " + databaseName + "\nGO\n");
        pw.println(spString);
        for (String table : tables) {
            ResultSet rs = conn.createStatement().executeQuery(
                    "SELECT COLUMN_NAME, DATA_TYPE , CHARACTER_MAXIMUM_LENGTH " +
                    "FROM INFORMATION_SCHEMA.COLUMNS " +
                    "WHERE TABLE_SCHEMA = 'dbo' " +
                    "AND TABLE_NAME = '" + tablePrefix + table + "'");
            ArrayList<String> columns = new ArrayList<String>();

            spString = "create proc " + schema + spPrefix + table + "( \n";

            while (rs.next()) {
                String fieldName = rs.getString(1);
                String type = rs.getString(2);
                String size = rs.getString(3);
                String varcharSize = "";
                if (type.equals("varchar") || type.equals("char")) {
                    varcharSize = "(" + size + ")";
                }
                String fieldAndTypeAndSizeWhenVarchar = fieldName + " " + type + "" + varcharSize;
                columns.add(fieldAndTypeAndSizeWhenVarchar);
                spString += "@" + spVarPrefix + fieldAndTypeAndSizeWhenVarchar + " = null, \n";
            }
            spString = spString.substring(0, spString.length() - 3);
            spString += "\n)" +
                    "AS\n" +
                    "BEGIN\n";

            for (int i = 0; i < columns.size(); i++) {
                if (i == 0) {
                    spString += "if(@" + spVarPrefix + columns.get(i).split(" ")[0] + " is not null)begin\n" +
                            "\tSELECT ";
                } else {
                    spString += "else if(@" + spVarPrefix + columns.get(i).split(" ")[0] + " is not null)begin\n" +
                            "\tSELECT ";
                }
                for (String string : columns) {
                    spString += string.split(" ")[0] + ", ";
                }
                spString = spString.substring(0, spString.length() - 2);
                spString += " FROM " + tablePrefix + table + " \n";
                spString += "\tWHERE " + columns.get(i).split(" ")[0] +
                        " = @" + spVarPrefix + columns.get(i).split(" ")[0] + "\n";
                spString += "end\n";
            }
            spString += "else\n" +
                    "\tSELECT ";
            for (String string : columns) {
                spString += string.split(" ")[0] + ", ";
            }
            spString = spString.substring(0, spString.length() - 2);
            spString += " FROM " + tablePrefix + table;
            spString += "\n" +
                    "end\n" +
                    "GO\n\n";
            res += spString;
            System.out.println(spString);
            pw.println(spString);
        }
        pw.close();
        return res;
    }
    static String[] tantaFactTables = {
        "Presentacion",
        "UnidadMedida",
        "Marca",
        "Modelo",
        "Grupo",
        "Clase",
        "Producto",
        "TipoVehiculo",
        "Proveedor",
        "TipoComprobante",
        "Cliente",
        "Persona",
        "Pais",
        "Departamento",
        "TipoDocIdentidad",
        "Empleado",
        "Cargo",
        "Moneda",
        "FormaPago",
        "TipoMov"
    };

    public static void almacen() throws SQLException, IOException {
        String[] almacenTiendaTables = {
            "almacen",
            "inventario",
            "producto",
            "gasto_mensual",
            "transferencia",
            "tienda"
        };
        String prefijo = "t_";
        String schema = "";
        GenSEL_Procedures ob = new GenSEL_Procedures(MasterConn.getConnection(),
                "AlmacenTienda", almacenTiendaTables, schema,
                "E:/Visual Studio Projects/Almacen Tienda/", "AlmacenTienda_GET_procedures.sql", prefijo);
        ob.makeSelProcedures(true);
    }

    public static void runMatricula() throws Exception {
        String[] matriculaTables = {
//            //batista
//            "universidad",
//            "facultad",
//            "escuela",
//            "plan_curricular",
//            //paco
//            "ciclo",
//            "curso",
//            "docente",
//            "carga_lectiva",
//            "prerequisitos",
//            //rc
//            "sede",
//            "tipo_sancion",
//            "sancionado",
//            "alumno",
            "files_upload"
        };
        String prefijo = "t_";
        String schema = "";
        Connection conn = MasterConn.getConnection();
        GenSEL_Procedures ob = new GenSEL_Procedures(conn,
                "Matricula", matriculaTables, schema,
                "E:/Matricula/DB/", "GET_PROCEDURES.sql", prefijo);
        ob.makeSelProcedures(true);
        conn.close();
    }

    public static void main(String[] args) throws Exception {
        runMatricula();
    }
}
