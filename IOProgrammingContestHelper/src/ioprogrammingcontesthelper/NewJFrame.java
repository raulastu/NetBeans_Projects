package ioprogrammingcontesthelper;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rc
 */
public class NewJFrame extends javax.swing.JFrame {

    String filePath;
    String inFileName = "in.txt";
    String outFileName = "out.txt";
    String myOutputFileName = "myOutput.txt";
    String defaultFolder = "C:/";
    Timer t;

    public NewJFrame() {
        initComponents();
        inTextArea = new LineNumberedPaper(0, 0);
        jScrollPane1.setViewportView(inTextArea);

        outTextArea = new LineNumberedPaper(0, 0);
        jScrollPane2.setViewportView(outTextArea);

        myOutputTextArea = new LineNumberedPaper(0, 0);
        myOutputTextArea.setEditable(false);
        myOutputTextArea.setBackground(Color.yellow);
        jScrollPane3.setViewportView(myOutputTextArea);

        folderField.setText(defaultFolder);

//        loadMyOutput();
        loadIn();
        loadOut();
        t = new Timer();
        TimerTask tt = new ReadMyOutputTask();
        t.schedule(tt, 0, 1000);
    }

    class ReadMyOutputTask extends TimerTask {

        @Override
        public void run() {
            try {
                loadMyOutput();
                String folderPath = folderField.getText();
                String outPath = folderPath + outFileName;
                String myOutPath = folderPath + myOutputFileName;
                Scanner sc1 = new Scanner(new File(outPath));
                Scanner sc2 = new Scanner(new File(myOutPath));
                StringBuffer comment = new StringBuffer();
                boolean ok = CompareTwoFiles2.sonIguales(sc1, sc2, comment);
                if (ok) {
                    messageLabel.setForeground(Color.green);
                    messageLabel.setText(comment.toString());
                } else {
                    messageLabel.setForeground(Color.red);
                    messageLabel.setText(comment + "");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void setFilePath(String filePath) {
        this.filePath = filePath;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        myOutputTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        folderField = new javax.swing.JTextField();
        sourceCodeField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        loadMyOutputFileButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setLocationByPlatform(true);

        inTextArea.setColumns(20);
        jScrollPane1.setViewportView(inTextArea);

        outTextArea.setColumns(20);
        outTextArea.setPreferredSize(new java.awt.Dimension(150, 22));
        jScrollPane2.setViewportView(outTextArea);

        myOutputTextArea.setBackground(new java.awt.Color(255, 255, 204));
        myOutputTextArea.setColumns(20);
        myOutputTextArea.setEditable(false);
        myOutputTextArea.setRows(5);
        jScrollPane3.setViewportView(myOutputTextArea);

        jLabel1.setText("out.txt");

        jLabel2.setText("in.txt");

        jLabel3.setText("myOutput.txt");

        jButton2.setText("save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText(" Copy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText(" Copy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Check");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        loadMyOutputFileButton.setText("^");
        loadMyOutputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMyOutputFileButtonActionPerformed(evt);
            }
        });

        messageLabel.setText(" ");

        jToggleButton1.setSelected(true);
        jToggleButton1.setText("auto load");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(jLabel2)
                                        .addGap(11, 11, 11)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                        .addGap(2, 2, 2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(folderField, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(loadMyOutputFileButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(sourceCodeField)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jButton4)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(loadMyOutputFileButton))
                    .addComponent(jButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(folderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sourceCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PrintWriter pw = null;
        try {
            String folderPath = folderField.getText();
            String inPath = folderPath + inFileName;
            String outPath = folderPath + outFileName;
            pw = new PrintWriter(new File(inPath));

            String ss[] = inTextArea.getText().split("\n");
            for (int i = 0; i < ss.length; i++) {
                pw.println(ss[i]);
            }
            pw.close();
            pw = new PrintWriter(new File(outPath));

            ss = outTextArea.getText().split("\n");
            for (int i = 0; i < ss.length; i++) {
                pw.println(ss[i]);
            }
            pw.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            pw.close();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String folderPath = folderField.getText();
            String outPath = folderPath + outFileName;
            String myOutPath = folderPath + myOutputFileName;
            Scanner sc1 = new Scanner(new File(outPath));
            Scanner sc2 = new Scanner(new File(myOutPath));
            StringBuffer comment = new StringBuffer();
            boolean ok = CompareTwoFiles2.sonIguales(sc1, sc2, comment);
            if (ok) {
                JOptionPane.showMessageDialog(this, comment, "Got it", JOptionPane.INFORMATION_MESSAGE, null);
            } else {
                JOptionPane.showMessageDialog(this, comment, ">>>>>><<<<<<", JOptionPane.ERROR_MESSAGE, null);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void loadMyOutputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMyOutputFileButtonActionPerformed
        loadMyOutput();
    }//GEN-LAST:event_loadMyOutputFileButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String selection = folderField.getText() + myOutputFileName;
        StringSelection data = new StringSelection(selection);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(data, data);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String selection = sourceCodeField.getText();
        StringSelection data = new StringSelection(selection);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(data, data);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (jToggleButton1.isSelected()) {
            TimerTask tt = new ReadMyOutputTask();
            t = new Timer();
            t.schedule(tt, 0, 1000);
        } else {
            t.cancel();
            t.purge();
            t = null;
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewJFrame frame = new NewJFrame();
                Toolkit tk = Toolkit.getDefaultToolkit();
                Dimension screenSize = tk.getScreenSize();
                final int WIDTH = screenSize.width;
                final int HEIGHT = screenSize.height;
                frame.setLocation((int) (WIDTH - frame.getSize().getWidth()),
                        (int) (HEIGHT - frame.getSize().getHeight()));
                frame.setVisible(true);
            }
        });
    }

    public void loadMyOutput() {
        try {
            String folderPath = folderField.getText();
            String myOutPath = folderPath + myOutputFileName;
            Scanner sc2 = new Scanner(new File(myOutPath));
            myOutputTextArea.setText("");
            while (sc2.hasNextLine()) {
                myOutputTextArea.append(sc2.nextLine());
                myOutputTextArea.append("\n");
            }
            sc2.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    /**
     * load the sample input, if available
     */
    public void loadIn() {
        try {
            String folderPath = folderField.getText();
            String myOutPath = folderPath + inFileName;
            Scanner sc2 = new Scanner(new File(myOutPath));
            inTextArea.setText("");
            while (sc2.hasNextLine()) {
                inTextArea.append(sc2.nextLine());
                inTextArea.append("\n");
            }
            sc2.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    /**
     * load the sample output, if available
     */
    public void loadOut() {
        try {
            String folderPath = folderField.getText();
            String myOutPath = folderPath + outFileName;
            Scanner sc2 = new Scanner(new File(myOutPath));
            outTextArea.setText("");
            while (sc2.hasNextLine()) {
                outTextArea.append(sc2.nextLine());
                outTextArea.append("\n");
            }
            sc2.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField folderField;
    private javax.swing.JTextArea inTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton loadMyOutputFileButton;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextArea myOutputTextArea;
    private javax.swing.JTextArea outTextArea;
    private javax.swing.JTextField sourceCodeField;
    // End of variables declaration//GEN-END:variables
}
